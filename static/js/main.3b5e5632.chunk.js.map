{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PeopleLink/PeopleLink.tsx","contexts/PeopleContext/PeopleContext.tsx","components/ParentsLink/ParentsLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleLink","person","slug","sex","name","to","classNames","DEFAULT_PEOPLE_CONTEXT","people","setPeople","PeopleContext","createContext","PeopleProvider","children","useState","Provider","value","ParentsLink","parentName","useContext","personByName","find","pers","PeopleTable","useParams","map","born","died","motherName","fatherName","PeoplePage","isLoad","setIsLoad","isError","setIsError","isShowLoad","length","isShowError","isShowNoPeople","isShowPeople","useEffect","handleNavLinkClass","isActive","NavBar","role","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3b5e5632.chunk.js","sourcesContent":["export const HomePage = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n","export const NotFoundPage = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PeopleLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { createContext, useState } from 'react';\nimport { Person } from '../../types';\n\ntype PeopleContextType = {\n  people: Person[];\n  setPeople: (people: Person[]) => void;\n};\n\nconst DEFAULT_PEOPLE_CONTEXT: PeopleContextType = {\n  people: [],\n  setPeople: () => { },\n};\n\nexport const PeopleContext = createContext(DEFAULT_PEOPLE_CONTEXT);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PeopleProvider: React.FC<Props> = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  return (\n    <PeopleContext.Provider value={{ people, setPeople }}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { PeopleContext } from '../../contexts/PeopleContext';\nimport { PeopleLink } from '../PeopleLink';\n\ntype Props = {\n  parentName: string | null;\n};\n\nexport const ParentsLink: React.FC<Props> = ({ parentName }) => {\n  const { people } = useContext(PeopleContext);\n\n  if (!parentName) {\n    return <>-</>;\n  }\n\n  const personByName = people.find(pers => pers.name === parentName);\n\n  if (personByName) {\n    return <PeopleLink person={personByName} />;\n  }\n\n  return <>{parentName}</>;\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PeopleLink } from '../PeopleLink';\nimport { ParentsLink } from '../ParentsLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': slug === person.slug,\n            })}\n          >\n            <td>\n              <PeopleLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              <ParentsLink parentName={person.motherName} />\n            </td>\n            <td>\n              <ParentsLink parentName={person.fatherName} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\nimport { PeopleContext } from '../../contexts/PeopleContext';\n\nexport const PeoplePage: React.FC = () => {\n  const { people, setPeople } = useContext(PeopleContext);\n  const [isLoad, setIsLoad] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const isShowLoad = isLoad && !isError && !people.length;\n  const isShowError = !isLoad && isError && !people.length;\n  const isShowNoPeople = !isLoad && !isError && !people.length;\n  const isShowPeople = !isLoad && !isError && !!people.length;\n\n  useEffect(() => {\n    setIsError(false);\n    setIsLoad(true);\n\n    (async () => {\n      try {\n        setPeople(await getPeople());\n      } catch {\n        setIsError(true);\n      } finally {\n        setIsLoad(false);\n      }\n    })();\n\n    return () => setPeople([]);\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isShowLoad && <Loader />}\n\n          {isShowError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isShowNoPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isShowPeople && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nconst handleNavLinkClass = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n\nexport const NavBar = () => {\n  return (\n    <>\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={handleNavLinkClass}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={handleNavLinkClass}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <Outlet />\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<NavBar />}>\n            <Route index element={<HomePage />} />\n            <Route path=\"*\" element={<NotFoundPage />} />\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeopleProvider } from './contexts/PeopleContext';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <PeopleProvider>\n      <Router>\n        <App />\n      </Router>\n    </PeopleProvider>,\n  );\n"],"sourceRoot":""}